@startuml
!include style.puml
skinparam ArrowFontStyle plain

Actor User as user USER_COLOR
Participant "ui:UI" as ui UI_COLOR
Participant ":Logic" as logic LOGIC_COLOR
Participant ":Model" as model MODEL_COLOR
Participant ":Storage" as storage STORAGE_COLOR

user -[USER_COLOR]> ui : "delete 1"
activate ui UI_COLOR

ui -[UI_COLOR]> logic : execute("delete 1")
activate logic LOGIC_COLOR

logic -[LOGIC_COLOR]> model : deletePerson(p)
activate model MODEL_COLOR

model -[MODEL_COLOR]-> logic
deactivate model

' Logic also updates command history after executing the command
logic -[LOGIC_COLOR]> model : getCommandHistory().add("delete 1")
activate model MODEL_COLOR
model --[MODEL_COLOR]> logic
deactivate model

logic -[LOGIC_COLOR]> storage : saveAddressBook(addressBook)
activate storage STORAGE_COLOR

storage -[STORAGE_COLOR]> storage : Save to file
activate storage STORAGE_COLOR_T1
storage --[STORAGE_COLOR]> storage
deactivate storage
storage --[STORAGE_COLOR]> logic
deactivate storage

note over logic,storage
At shutdown, Logic requests a session snapshot only if the session attributes to be
persisted (address book, search keywords, GUI settings) differ from the last
persisted snapshot. The timestamp (`savedAt`) is ignored for this comparison;
command-result-only changes do not make the session dirty.
end note
logic -[LOGIC_COLOR]> storage : saveSession(sessionData)
activate storage STORAGE_COLOR
storage -[STORAGE_COLOR]> storage : Save session file
deactivate storage

note over logic,storage: Logic also persists command history
logic -[LOGIC_COLOR]> storage : saveCommandHistory(commandHistory)
activate storage STORAGE_COLOR
storage -[STORAGE_COLOR]> storage : Save command history file
deactivate storage

logic --[LOGIC_COLOR]> ui
deactivate logic

ui--[UI_COLOR]> user
deactivate ui
@enduml
